import{Q as u}from"./QBtn.e9a635d3.js";import{c as C,h as B}from"./use-router-link.9ae0de8b.js";import{c as A,h as L,i as h,g as D,u as q,G as E,H as S,o as I,I as U,q as K,v as R,J as G,K as m,z as l,y as T}from"./index.3e3dec75.js";var V=C({name:"QBtnGroup",props:{unelevated:Boolean,outline:Boolean,flat:Boolean,rounded:Boolean,square:Boolean,push:Boolean,stretch:Boolean,glossy:Boolean,spread:Boolean},setup(o,{slots:t}){const e=A(()=>{const n=["unelevated","outline","flat","rounded","square","push","stretch","glossy"].filter(r=>o[r]===!0).map(r=>`q-btn-group--${r}`).join(" ");return`q-btn-group row no-wrap${n.length!==0?" "+n:""}`+(o.spread===!0?" q-btn-group--spread":" inline")});return()=>L("div",{class:e.value},B(t.default))}});const _="[Mount action] Mount Visage",H=async o=>{var n;console.log("sampleFunc:: ",o);const t=D();return await h("SHADE").hunt(_,{idx:"vsg00",src:"indexCanvas",dat:{width:720,height:720}}),(n=t==null?void 0:t.proxy)==null||n.$forceUpdate(),o};/*!
 * Contro
 * (c) 2020 Niklas Higi
 * Released under the MIT License.
 */class g{constructor(t=0,e=0){this.x=t,this.y=e}}const d={" ":["Space","Spacebar","Space Bar"],AltGraph:["Alt Gr"],ArrowDown:["Down"],ArrowLeft:["Left"],ArrowRight:["Right"],ArrowUp:["Up"],Backspace:["Backspace"],Control:["Ctrl","Ctl"],Delete:["Delete","Del"],Enter:["Enter","Return"],Escape:["Escape","Esc"],Insert:["Insert","Ins"],PageDown:["Page Down","PgDown"],PageUp:["Page Up","PgUp"],Tab:["Tab"]};function w(o){if(o.length===1)return o.toLowerCase();for(const t in d)for(const e of d[t])if(o.toLowerCase()===e.toLowerCase())return t;return o}function f(o){return o in d?d[o][0]:o.length===1?o.toUpperCase():o}const y={arrows:["Arrow keys",["ArrowUp","ArrowLeft","ArrowDown","ArrowRight"]],wasd:["WASD",["W","A","S","D"]]};class M{constructor({doc:t=document}={}){this.pressedKeys=new Set,this.queuedKeys=new Set,this.document=t,this.document.addEventListener("keydown",e=>{let n=e.key;return n===n.toUpperCase()&&(n=n.toLowerCase()),this.pressedKeys.add(n),this.queuedKeys.add(n),!1}),this.document.addEventListener("keyup",e=>{let n=e.key;return n===n.toUpperCase()&&(n=n.toLowerCase()),this.pressedKeys.delete(n),this.queuedKeys.delete(n),!1})}key(t){const e=w(t),n=f(e);return{label:f(e),query:()=>this.pressedKeys.has(e),trigger:{label:n,query:()=>this.queuedKeys.delete(e)}}}directionalKeys(t,e){let n,r;if(typeof t=="string"){const s=t.toLowerCase();if(s in y){const a=y[s];n=a[0],r=a[1]}else throw new Error(`Directional key template "${t}" not found!`)}else if(t.length===4)r=t.map(s=>w(s)),n=t.map(s=>f(s)).join("");else throw new Error("Directional key templates have to consist of four keys!");return{label:e||n,query:()=>{const s=new g;return this.key(r[0]).query()&&(s.y-=1),this.key(r[1]).query()&&(s.x-=1),this.key(r[2]).query()&&(s.y+=1),this.key(r[3]).query()&&(s.x+=1),s}}}}/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */function N(o,t,e,n){function r(s){return s instanceof e?s:new e(function(a){a(s)})}return new(e||(e=Promise))(function(s,a){function v(i){try{c(n.next(i))}catch(p){a(p)}}function k(i){try{c(n.throw(i))}catch(p){a(p)}}function c(i){i.done?s(i.value):r(i.value).then(v,k)}c((n=n.apply(o,t||[])).next())})}const x=[["A"],["B"],["X"],["Y"],["Left Bumper","LB"],["Right Bumper","RB"],["Left Trigger","LT"],["Right Trigger","RT"],["Back","View"],["Start"],["Left Stick"],["Right Stick"],["Up","DpadUp"],["Down","DpadDown"],["Left","DpadLeft"],["Right","DpadRight"],["Home","Guide","Xbox"]];function $(o){if(typeof o=="number")return o;let t=0;for(const e of x){for(const n of e)if(o.toLowerCase()===n.toLowerCase())return t;t++}throw new Error(`There is no gamepad button called "${o}"!`)}function P(o){return x[o][0]}const b={left:{label:"Left stick",xAxis:0,yAxis:1},right:{label:"Right stick",xAxis:2,yAxis:3}};class j{constructor({win:t=window,nav:e=navigator}={}){this.pressedButtons=new Set,this.gamepadTimestamp=0,this.window=t,this.navigator=e,this.window.addEventListener("gamepadconnected",({gamepad:n})=>{this.isConnected()||n.mapping==="standard"&&(this.gamepadIndex=n.index)}),this.window.addEventListener("gamepaddisconnected",({gamepad:n})=>{this.gamepadIndex===n.index&&(this.gamepadIndex=void 0)})}isConnected(){return this.gamepadIndex!==void 0&&this.gamepad.connected}get gamepad(){const t=this.navigator.getGamepads()[this.gamepadIndex];return t.timestamp>this.gamepadTimestamp&&(this.gamepadTimestamp=t.timestamp),t}button(t){const e=$(t),n=P(e);return{label:n,query:()=>this.isConnected()?this.gamepad.buttons[e].pressed:!1,fromGamepad:!0,trigger:{label:n,query:()=>this.isConnected()?this.gamepad.buttons[e].pressed?this.pressedButtons.has(e)?!1:(this.pressedButtons.add(e),!0):(this.pressedButtons.delete(e),!1):!1,fromGamepad:!0}}}stick(t){let e;if(typeof t=="string")if(t in b)e=b[t];else throw new Error(`Gamepad stick "${t}" not found!`);else e=t;return{label:e.label,query:()=>this.isConnected()?new g(this.gamepad.axes[e.xAxis],this.gamepad.axes[e.yAxis]):new g(0,0)}}vibrate(t,{weakMagnitude:e,strongMagnitude:n}={}){return N(this,void 0,void 0,function*(){if(!this.isConnected())return;const r=this.gamepad.vibrationActuator;!r||r.type!=="dual-rumble"||(yield r.playEffect("dual-rumble",{duration:t,strongMagnitude:n,weakMagnitude:e}))})}}new M;new j;const Q={class:"fullscreen absolute-center"},O=m("div",{class:"self-center"},[m("canvas",{id:"indexCanvas",style:{position:"relative",bottom:"40px",right:"75px"}})],-1),W={class:"q-pa-md q-gutter-y-md column items-start"},X=q({name:"GamePlay"}),Y=Object.assign(X,{setup(o){E(),S(),h("bus"),h("SHADE");var t;const e=(r,s)=>{alert(r)},n=(r,s)=>{console.log("rendering...")};return I(async()=>{H("on"),t=setInterval(n,1111)}),U(async()=>{}),K(async()=>{clearInterval(t)}),(r,s)=>(R(),G("div",Q,[O,m("div",W,[l(V,{spread:""},{default:T(()=>[l(u,{onClick:s[0]||(s[0]=a=>e(0,a)),color:"amber",glossy:"","text-color":"black",push:"",label:"backward"}),l(u,{onClick:s[1]||(s[1]=a=>e(1,a)),color:"yellow",glossy:"","text-color":"black",push:"",label:"spin cntrclock"}),l(u,{onClick:s[2]||(s[2]=a=>e(2,a)),color:"green",glossy:"","text-color":"black",push:"",label:"forward"}),l(u,{onClick:s[3]||(s[3]=a=>e(3,a)),color:"yellow",glossy:"","text-color":"black",push:"",label:"spin clockwise"}),l(u,{onClick:s[4]||(s[4]=a=>e(4,a)),color:"amber",glossy:"","text-color":"black",push:"",label:"backward"})]),_:1})])]))}});export{Y as default};
