import{i as f,g as L,u as k,G,H as B,o as _,I as S,q,v as P,J as T,K as U}from"./index.d663dae8.js";const N="[Read action] Read Visage",F="[Write action] Remove Visage",C="[Mount action] Mount Visage",H="[Write action] Write Container",V="[Surface action] Surface Container",g="[Add action] Add Container",y="[Write action] Write Graphic",W="[Write action] Write Hexagon",K="[Write action] Write Focigon",A=async n=>{var t=await window.electronAPI.listFocus("avas"),a=JSON.parse(t),e=a.focBit.lst;e.forEach(async(i,r)=>{var o=i;console.log("po "+i.idx),t=await SHADE.hunt(K,{idx:o.idx,dat:{src:"gph01",clr:1044480,sze:111,fce:o.face,bit:o}})})},O=async n=>{var e;console.log("sampleFunc:: ",n);const t=L();return await f("SHADE").hunt(C,{idx:"vsg00",src:"indexCanvas",dat:{}}),(e=t==null?void 0:t.proxy)==null||e.$forceUpdate(),n},M=async n=>{console.log("sampleFunc:: ",n);const t=f("SHADE");var e=await t.hunt(F,{idx:"vsg00"});e=await t.hunt(C,{idx:"vsg00",src:"indexCanvas",dat:{}}),e=await t.hunt(N,{idx:"vsg00"}),e=await t.hunt(H,{idx:"can00",src:"vsg00"});var a=e.canBit.dat.bit;e=await t.hunt(V,{idx:"fce-can-00",src:"vsg00"}),e=await t.hunt(g,{idx:"fce-can-00",dat:{bit:a}}),e=await t.hunt(y,{idx:"gph00",dat:{h:100,w:40,x:40,y:40}}),e=await t.hunt(g,{idx:"can00",dat:{bit:e.gphBit.dat.bit}}),e=await t.hunt(y,{idx:"gph01",dat:{h:100,w:40,x:40,y:40}}),e=await t.hunt(g,{idx:"can00",dat:{bit:e.gphBit.dat.bit}}),e=await t.hunt(y,{idx:"gph02",dat:{h:100,w:40,x:40,y:40}}),e=await t.hunt(g,{idx:"can00",dat:{bit:e.gphBit.dat.bit}});var e=await window.electronAPI.readHexmap("map00"),i=JSON.parse(e),r=i.mapBit.dat.grid;return e=await t.hunt(W,{idx:"hex00",dat:{src:"gph00",frm:"hexmap",sze:111,bit:r}}),n};/*!
 * Contro
 * (c) 2020 Niklas Higi
 * Released under the MIT License.
 */const p={preferGamepad:!1};class x{constructor(t=0,a=0){this.x=t,this.y=a}}const w={" ":["Space","Spacebar","Space Bar"],AltGraph:["Alt Gr"],ArrowDown:["Down"],ArrowLeft:["Left"],ArrowRight:["Right"],ArrowUp:["Up"],Backspace:["Backspace"],Control:["Ctrl","Ctl"],Delete:["Delete","Del"],Enter:["Enter","Return"],Escape:["Escape","Esc"],Insert:["Insert","Ins"],PageDown:["Page Down","PgDown"],PageUp:["Page Up","PgUp"],Tab:["Tab"]};function E(n){if(n.length===1)return n.toLowerCase();for(const t in w)for(const a of w[t])if(n.toLowerCase()===a.toLowerCase())return t;return n}function b(n){return n in w?w[n][0]:n.length===1?n.toUpperCase():n}const v={arrows:["Arrow keys",["ArrowUp","ArrowLeft","ArrowDown","ArrowRight"]],wasd:["WASD",["W","A","S","D"]]};class j{constructor({doc:t=document}={}){this.pressedKeys=new Set,this.queuedKeys=new Set,this.document=t,this.document.addEventListener("keydown",a=>{p.preferGamepad=!1;let e=a.key;return e===e.toUpperCase()&&(e=e.toLowerCase()),this.pressedKeys.add(e),this.queuedKeys.add(e),!1}),this.document.addEventListener("keyup",a=>{p.preferGamepad=!1;let e=a.key;return e===e.toUpperCase()&&(e=e.toLowerCase()),this.pressedKeys.delete(e),this.queuedKeys.delete(e),!1})}key(t){const a=E(t),e=b(a);return{label:b(a),query:()=>this.pressedKeys.has(a),trigger:{label:e,query:()=>this.queuedKeys.delete(a)}}}directionalKeys(t,a){let e,i;if(typeof t=="string"){const r=t.toLowerCase();if(r in v){const o=v[r];e=o[0],i=o[1]}else throw new Error(`Directional key template "${t}" not found!`)}else if(t.length===4)i=t.map(r=>E(r)),e=t.map(r=>b(r)).join("");else throw new Error("Directional key templates have to consist of four keys!");return{label:a||e,query:()=>{const r=new x;return this.key(i[0]).query()&&(r.y-=1),this.key(i[1]).query()&&(r.x-=1),this.key(i[2]).query()&&(r.y+=1),this.key(i[3]).query()&&(r.x+=1),r}}}}/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */function X(n,t,a,e){function i(r){return r instanceof a?r:new a(function(o){o(r)})}return new(a||(a=Promise))(function(r,o){function l(u){try{h(e.next(u))}catch(m){o(m)}}function D(u){try{h(e.throw(u))}catch(m){o(m)}}function h(u){u.done?r(u.value):i(u.value).then(l,D)}h((e=e.apply(n,t||[])).next())})}const I=[["A"],["B"],["X"],["Y"],["Left Bumper","LB"],["Right Bumper","RB"],["Left Trigger","LT"],["Right Trigger","RT"],["Back","View"],["Start"],["Left Stick"],["Right Stick"],["Up","DpadUp"],["Down","DpadDown"],["Left","DpadLeft"],["Right","DpadRight"],["Home","Guide","Xbox"]];function $(n){if(typeof n=="number")return n;let t=0;for(const a of I){for(const e of a)if(n.toLowerCase()===e.toLowerCase())return t;t++}throw new Error(`There is no gamepad button called "${n}"!`)}function z(n){return I[n][0]}const R={left:{label:"Left stick",xAxis:0,yAxis:1},right:{label:"Right stick",xAxis:2,yAxis:3}};class J{constructor({win:t=window,nav:a=navigator}={}){this.pressedButtons=new Set,this.gamepadTimestamp=0,this.window=t,this.navigator=a,this.window.addEventListener("gamepadconnected",({gamepad:e})=>{this.isConnected()||e.mapping==="standard"&&(this.gamepadIndex=e.index,p.preferGamepad=!0)}),this.window.addEventListener("gamepaddisconnected",({gamepad:e})=>{this.gamepadIndex===e.index&&(this.gamepadIndex=void 0,p.preferGamepad=!1)})}isConnected(){return this.gamepadIndex!==void 0&&this.gamepad.connected}get gamepad(){const t=this.navigator.getGamepads()[this.gamepadIndex];return t.timestamp>this.gamepadTimestamp&&(p.preferGamepad=!0,this.gamepadTimestamp=t.timestamp),t}button(t){const a=$(t),e=z(a);return{label:e,query:()=>this.isConnected()?this.gamepad.buttons[a].pressed:!1,fromGamepad:!0,trigger:{label:e,query:()=>this.isConnected()?this.gamepad.buttons[a].pressed?this.pressedButtons.has(a)?!1:(this.pressedButtons.add(a),!0):(this.pressedButtons.delete(a),!1):!1,fromGamepad:!0}}}stick(t){let a;if(typeof t=="string")if(t in R)a=R[t];else throw new Error(`Gamepad stick "${t}" not found!`);else a=t;return{label:a.label,query:()=>this.isConnected()?new x(this.gamepad.axes[a.xAxis],this.gamepad.axes[a.yAxis]):new x(0,0)}}vibrate(t,{weakMagnitude:a,strongMagnitude:e}={}){return X(this,void 0,void 0,function*(){if(!this.isConnected())return;const i=this.gamepad.vibrationActuator;!i||i.type!=="dual-rumble"||(yield i.playEffect("dual-rumble",{duration:t,strongMagnitude:e,weakMagnitude:a}))})}}function s(...n){if(n.length<2)throw new Error("Less than two controls specified!");return{get label(){return n.some(a=>a.fromGamepad)?(p.preferGamepad?n.find(a=>a.fromGamepad):n.find(a=>!a.fromGamepad)).label:n[0].label},query:()=>{let t;for(const a of n){const e=a.query();if(t=e,e)return e}if(typeof t=="boolean")return!1}}}const c=new j,d=new J,Q=async n=>{const t=f("bus");console.log("sampleFunc:: ",n);var a="foc03",e=()=>{t.emit("RENDER")};const i={a:async()=>{await window.electronAPI.spinRightFocus(a),e()},b:async()=>{await window.electronAPI.spinLeftFocus(a),e()},x:async()=>{await window.electronAPI.spinRightFocus(a),e()},y:async()=>{await window.electronAPI.spinLeftFocus(a),e()},up:async()=>{await window.electronAPI.spinRightFocus(a),e()},down:async()=>{await window.electronAPI.spinLeftFocus(a),e()},right:async()=>{await window.electronAPI.forwardFocus(a),e()},left:async()=>{await window.electronAPI.backwardFocus(a),e()},back:async()=>{await window.electronAPI.readHexmap(a),e()},lb:async()=>{await window.electronAPI.readHexmap(a),e()},rb:async()=>{await window.electronAPI.readHexmap(a),e()}},r={a:s(d.button("A").trigger,c.key("z").trigger),b:s(d.button("B").trigger,c.key("x").trigger),x:s(d.button("x").trigger,c.key("c").trigger),y:s(d.button("y").trigger,c.key("v").trigger),up:s(d.button("Up").trigger,c.key("Up").trigger),down:s(d.button("Down").trigger,c.key("Down").trigger),left:s(d.button("Left").trigger,c.key("Left").trigger),right:s(d.button("Right").trigger,c.key("Right").trigger),back:s(d.button("Back").trigger,c.key("Space").trigger),lb:s(d.button("LB").trigger,c.key("a").trigger),rb:s(d.button("RB").trigger,c.key("f").trigger)};function o(){for(var l in r)r[l].query()&&i[l]();requestAnimationFrame(o)}return o(),n},Y={class:"full-height row wrap justify-start items-start content-start"},Z=U("canvas",{id:"indexCanvas"},null,-1),ee=[Z],te=k({name:"GamePlay"}),ne=Object.assign(te,{setup(n){G(),B();const t=f("bus");return f("SHADE"),t.on("RENDER",(a,e,i)=>{A()}),_(async()=>{O("on"),Q("on")}),S(async()=>{M("on"),A()}),q(async()=>{}),(a,e)=>(P(),T("div",Y,ee))}});export{ne as default};
