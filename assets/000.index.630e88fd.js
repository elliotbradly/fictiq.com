import{i as e,g as c,u as i,G as r,H as d,o as u,I as _,q as E,v as A,J as g,K as h}from"./index.a4c805d4.js";const l="[Read action] Read Visage",p="[Write action] Remove Visage",o="[Mount action] Mount Visage",m="[Write action] Write Container",v="[Surface action] Surface Container",x="[Add action] Add Container",f=async n=>{var s;console.log("sampleFunc:: ",n);const t=c();return await e("SHADE").hunt(o,{idx:"vsg00",src:"indexCanvas",dat:{w:64,h:64}}),(s=t==null?void 0:t.proxy)==null||s.$forceUpdate(),n},C=async n=>{console.log("sampleFunc:: ",n);const t=e("SHADE");var a=await t.hunt(p,{idx:"vsg00"});a=await t.hunt(o,{idx:"vsg00",src:"indexCanvas",dat:{w:640,h:640}}),a=await t.hunt(l,{idx:"vsg00"}),a=await t.hunt(m,{idx:"can00",src:"vsg00"});var s=a.canBit.dat.bit;return a=await t.hunt(v,{idx:"fce-can-00",src:"vsg00"}),a=await t.hunt(x,{idx:"fce-can-00",dat:{bit:s}}),n},R={class:"full-height row wrap justify-start items-start content-start"},S=h("canvas",{id:"indexCanvas"},null,-1),w=[S],D=i({name:"GamePlay"}),y=Object.assign(D,{setup(n){return r(),d(),e("SHADE"),u(async()=>{f("on")}),_(async()=>{C("on")}),E(async()=>{}),(t,a)=>(A(),g("div",R,w))}});export{y as default};
