import{i as s,g as d}from"./index.c00ffa1b.js";const r="[Read action] Read Visage",u="[Write action] Remove Visage",e="[Mount action] Mount Visage",g="[Write action] Write Container",h="[Surface action] Surface Container",c="[Add action] Add Container",o="[Write action] Write Graphic",A=async n=>{var i;debugger;console.log("sampleFunc:: ",n);const t=d();return await s("SHADE").hunt(e,{idx:"vsg00",src:"indexCanvas",dat:{}}),(i=t==null?void 0:t.proxy)==null||i.$forceUpdate(),n},E=async n=>{console.log("sampleFunc:: ",n);const t=s("SHADE");var a=await t.hunt(u,{idx:"vsg00"});a=await t.hunt(e,{idx:"vsg00",src:"indexCanvas",dat:{}}),a=await t.hunt(r,{idx:"vsg00"}),a=await t.hunt(g,{idx:"can00",src:"vsg00"});var i=a.canBit.dat.bit;return a=await t.hunt(h,{idx:"fce-can-00",src:"vsg00"}),a=await t.hunt(c,{idx:"fce-can-00",dat:{bit:i}}),a=await t.hunt(o,{idx:"gph00",dat:{h:100,w:40,x:40,y:40}}),a=await t.hunt(c,{idx:"can00",dat:{bit:a.gphBit.dat.bit}}),a=await t.hunt(o,{idx:"gph01",dat:{h:100,w:40,x:40,y:40}}),a=await t.hunt(c,{idx:"can00",dat:{bit:a.gphBit.dat.bit}}),n};export{A as m,E as u};
